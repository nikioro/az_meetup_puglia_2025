name: Deploy to Azure App Service Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  PHP_VERSION: '8.2'
  NODE_VERSION: '18'

permissions:
  id-token: write # necessario per OIDC
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

    - name: Validate composer.json (if exists)
      run: |
        if [ -f composer.json ]; then
          composer validate --strict
        else
          echo "No composer.json found, skipping validation"
        fi

    - name: Install PHP dependencies
      run: |
        if [ -f composer.json ]; then
          composer install --no-progress --no-suggest --no-interaction --prefer-dist --optimize-autoloader --no-dev
        else
          echo "No composer.json found, skipping PHP dependencies installation"
        fi

    - name: Run PHP syntax check
      run: |
        find . -name "*.php" -type f -exec php -l {} \; | grep -v "No syntax errors" || true


    - name: Azure login using OIDC
      uses: azure/login@v2
      with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ vars.AZURE_APP_SERVICE_NAME }}
        slot-name: ${{ vars.AZURE_DEPLOYMENT_SLOT || 'production' }}
        package: '.'
        
    - name: Configure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        app-name: ${{ vars.AZURE_APP_SERVICE_NAME }}
        slot-name: ${{ vars.AZURE_DEPLOYMENT_SLOT || 'production' }}
        app-settings-json: |
          [
            {
              "name": "DB_HOST",
              "value": "${{ secrets.DB_HOST }}",
              "slotSetting": false
            },
            {
              "name": "DB_USERNAME", 
              "value": "${{ vars.DB_USERNAME }}",
              "slotSetting": false
            },
            {
              "name": "DB_PASSWORD",
              "value": "${{ secrets.DB_PASSWORD }}",
              "slotSetting": false
            },
            {
              "name": "DB_DATABASE",
              "value": "${{ vars.DB_DATABASE }}",
              "slotSetting": false
            },
            {
              "name": "PHP_VERSION",
              "value": "${{ env.PHP_VERSION }}",
              "slotSetting": false
            },
            {
              "name": "APP_ENV",
              "value": "${{ github.event.inputs.environment || 'staging' }}",
              "slotSetting": false
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "false",
              "slotSetting": false
            }
          ]

    - name: Azure logout
      run: az logout  